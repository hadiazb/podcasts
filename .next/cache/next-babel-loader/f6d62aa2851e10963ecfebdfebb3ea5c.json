{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport PodcastListWithClick from '../components/PodcastListWithClick';\nimport PodcastPlayer from '../components/PodcastPlayer';\nimport Error from './_error';\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openPodcast\", (event, podcast) => {\n      if (event.metaKey || event.ctrlKey || event.shiftKey || event.nativeEvent && event.nativeEvent.which === 2) {\n        // Si está haciendo Ctrl+Click o Cmd+Click, dejamos que el click suceda normalmente\n        return;\n      }\n\n      event.preventDefault();\n      this.setState({\n        openPodcast: podcast\n      });\n    });\n\n    _defineProperty(this, \"closePodcast\", event => {\n      event.preventDefault();\n      this.setState({\n        openPodcast: null\n      });\n    });\n\n    this.state = {\n      openPodcast: null\n    };\n  }\n\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n\n      if (reqChannel.status >= 400) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      return {\n        channel,\n        audioClips,\n        series,\n        statusCode: 200\n      };\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series,\n      statusCode\n    } = this.props;\n    const {\n      openPodcast\n    } = this.state;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode\n      });\n    }\n\n    return __jsx(Layout, {\n      title: channel.title\n    }, openPodcast && __jsx(PodcastPlayer, {\n      clip: openPodcast,\n      onClose: this.closePodcast\n    }), __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${channel.urls.banner_image.original})`\n      },\n      className: \"jsx-1546675339\" + \" \" + 'banner'\n    }), __jsx(\"h1\", {\n      className: \"jsx-1546675339\"\n    }, channel.title), series.length > 0 && __jsx(\"div\", {\n      className: \"jsx-1546675339\"\n    }, __jsx(\"h2\", {\n      className: \"jsx-1546675339\"\n    }, \"Series\"), __jsx(ChannelGrid, {\n      channels: series\n    })), __jsx(\"h2\", {\n      className: \"jsx-1546675339\"\n    }, \"Ultimos Podcasts\"), __jsx(PodcastListWithClick, {\n      podcasts: audioClips,\n      onClickPodcast: this.openPodcast\n    }), __jsx(_JSXStyle, {\n      id: \"1546675339\"\n    }, \".banner.jsx-1546675339{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;}h1.jsx-1546675339{font-weight:600;padding:15px;}h2.jsx-1546675339{padding:15px;font-size:1.2em;font-weight:600;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FzdXMvRG9jdW1lbnRvcy9wcm9ncmFtYWNpw7NuL2N1cnNvTmV4dC9wb2RjYXN0cy9wYWdlcy9jaGFubmVsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1JZ0IsQUFHa0IsQUFPSyxBQUlILFdBVk0sRUFXSCxHQUpILGFBQ2QsQUFJaUIsQ0FYWSxlQVluQixTQUNWLElBWnVCLHNCQUNBLHNCQUN2QiIsImZpbGUiOiIvaG9tZS9hc3VzL0RvY3VtZW50b3MvcHJvZ3JhbWFjacOzbi9jdXJzb05leHQvcG9kY2FzdHMvcGFnZXMvY2hhbm5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnaXNvbW9ycGhpYy1mZXRjaCc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBDaGFubmVsR3JpZCBmcm9tICcuLi9jb21wb25lbnRzL0NoYW5uZWxHcmlkJztcbmltcG9ydCBQb2RjYXN0TGlzdFdpdGhDbGljayBmcm9tICcuLi9jb21wb25lbnRzL1BvZGNhc3RMaXN0V2l0aENsaWNrJztcbmltcG9ydCBQb2RjYXN0UGxheWVyIGZyb20gJy4uL2NvbXBvbmVudHMvUG9kY2FzdFBsYXllcic7XG5pbXBvcnQgRXJyb3IgZnJvbSAnLi9fZXJyb3InO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XG5cdFx0c3VwZXIocHJvcHMpO1xuXHRcdHRoaXMuc3RhdGUgPSB7IG9wZW5Qb2RjYXN0OiBudWxsIH07XG5cdH1cblxuXHRzdGF0aWMgYXN5bmMgZ2V0SW5pdGlhbFByb3BzKHsgcXVlcnksIHJlcyB9KSB7XG5cdFx0bGV0IGlkQ2hhbm5lbCA9IHF1ZXJ5LmlkO1xuXG5cdFx0dHJ5IHtcblx0XHRcdGxldCBbXG5cdFx0XHRcdHJlcUNoYW5uZWwsXG5cdFx0XHRcdHJlcVNlcmllcyxcblx0XHRcdFx0cmVxQXVkaW9zLFxuXHRcdFx0XSA9IGF3YWl0IFByb21pc2UuYWxsKFtcblx0XHRcdFx0ZmV0Y2goXG5cdFx0XHRcdFx0YGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9YFxuXHRcdFx0XHQpLFxuXHRcdFx0XHRmZXRjaChcblx0XHRcdFx0XHRgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHNgXG5cdFx0XHRcdCksXG5cdFx0XHRcdGZldGNoKFxuXHRcdFx0XHRcdGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwc2Bcblx0XHRcdFx0KSxcblx0XHRcdF0pO1xuXG5cdFx0XHRpZiAocmVxQ2hhbm5lbC5zdGF0dXMgPj0gNDAwKSB7XG5cdFx0XHRcdHJlcy5zdGF0dXNDb2RlID0gcmVxQ2hhbm5lbC5zdGF0dXM7XG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0Y2hhbm5lbDogbnVsbCxcblx0XHRcdFx0XHRhdWRpb0NsaXBzOiBudWxsLFxuXHRcdFx0XHRcdHNlcmllczogbnVsbCxcblx0XHRcdFx0XHRzdGF0dXNDb2RlOiByZXFDaGFubmVsLnN0YXR1cyxcblx0XHRcdFx0fTtcblx0XHRcdH1cblxuXHRcdFx0bGV0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKCk7XG5cdFx0XHRsZXQgY2hhbm5lbCA9IGRhdGFDaGFubmVsLmJvZHkuY2hhbm5lbDtcblxuXHRcdFx0bGV0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpb3MuanNvbigpO1xuXHRcdFx0bGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHM7XG5cblx0XHRcdGxldCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKTtcblx0XHRcdGxldCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHM7XG5cblx0XHRcdHJldHVybiB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZTogMjAwIH07XG5cdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0Y2hhbm5lbDogbnVsbCxcblx0XHRcdFx0YXVkaW9DbGlwczogbnVsbCxcblx0XHRcdFx0c2VyaWVzOiBudWxsLFxuXHRcdFx0XHRzdGF0dXNDb2RlOiA1MDMsXG5cdFx0XHR9O1xuXHRcdH1cblx0fVxuXG5cdG9wZW5Qb2RjYXN0ID0gKGV2ZW50LCBwb2RjYXN0KSA9PiB7XG5cdFx0aWYgKFxuXHRcdFx0ZXZlbnQubWV0YUtleSB8fFxuXHRcdFx0ZXZlbnQuY3RybEtleSB8fFxuXHRcdFx0ZXZlbnQuc2hpZnRLZXkgfHxcblx0XHRcdChldmVudC5uYXRpdmVFdmVudCAmJiBldmVudC5uYXRpdmVFdmVudC53aGljaCA9PT0gMilcblx0XHQpIHtcblx0XHRcdC8vIFNpIGVzdMOhIGhhY2llbmRvIEN0cmwrQ2xpY2sgbyBDbWQrQ2xpY2ssIGRlamFtb3MgcXVlIGVsIGNsaWNrIHN1Y2VkYSBub3JtYWxtZW50ZVxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0dGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRvcGVuUG9kY2FzdDogcG9kY2FzdCxcblx0XHR9KTtcblx0fTtcblxuXHRjbG9zZVBvZGNhc3QgPSAoZXZlbnQpID0+IHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0b3BlblBvZGNhc3Q6IG51bGwsXG5cdFx0fSk7XG5cdH07XG5cblx0cmVuZGVyKCkge1xuXHRcdGNvbnN0IHtcblx0XHRcdGNoYW5uZWwsXG5cdFx0XHRhdWRpb0NsaXBzLFxuXHRcdFx0c2VyaWVzLFxuXHRcdFx0c3RhdHVzQ29kZSxcblx0XHR9ID0gdGhpcy5wcm9wcztcblx0XHRjb25zdCB7IG9wZW5Qb2RjYXN0IH0gPSB0aGlzLnN0YXRlO1xuXG5cdFx0aWYgKHN0YXR1c0NvZGUgIT09IDIwMCkge1xuXHRcdFx0cmV0dXJuIDxFcnJvciBzdGF0dXNDb2RlPXtzdGF0dXNDb2RlfSAvPjtcblx0XHR9XG5cblx0XHRyZXR1cm4gKFxuXHRcdFx0PExheW91dCB0aXRsZT17Y2hhbm5lbC50aXRsZX0+XG5cdFx0XHRcdHtvcGVuUG9kY2FzdCAmJiAoXG5cdFx0XHRcdFx0PFBvZGNhc3RQbGF5ZXJcblx0XHRcdFx0XHRcdGNsaXA9e29wZW5Qb2RjYXN0fVxuXHRcdFx0XHRcdFx0b25DbG9zZT17dGhpcy5jbG9zZVBvZGNhc3R9XG5cdFx0XHRcdFx0Lz5cblx0XHRcdFx0KX1cblxuXHRcdFx0XHQ8ZGl2XG5cdFx0XHRcdFx0Y2xhc3NOYW1lPSdiYW5uZXInXG5cdFx0XHRcdFx0c3R5bGU9e3tcblx0XHRcdFx0XHRcdGJhY2tncm91bmRJbWFnZTogYHVybCgke2NoYW5uZWwudXJscy5iYW5uZXJfaW1hZ2Uub3JpZ2luYWx9KWAsXG5cdFx0XHRcdFx0fX1cblx0XHRcdFx0Lz5cblxuXHRcdFx0XHQ8aDE+e2NoYW5uZWwudGl0bGV9PC9oMT5cblxuXHRcdFx0XHR7c2VyaWVzLmxlbmd0aCA+IDAgJiYgKFxuXHRcdFx0XHRcdDxkaXY+XG5cdFx0XHRcdFx0XHQ8aDI+U2VyaWVzPC9oMj5cblx0XHRcdFx0XHRcdDxDaGFubmVsR3JpZCBjaGFubmVscz17c2VyaWVzfSAvPlxuXHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQpfVxuXG5cdFx0XHRcdDxoMj5VbHRpbW9zIFBvZGNhc3RzPC9oMj5cblx0XHRcdFx0PFBvZGNhc3RMaXN0V2l0aENsaWNrXG5cdFx0XHRcdFx0cG9kY2FzdHM9e2F1ZGlvQ2xpcHN9XG5cdFx0XHRcdFx0b25DbGlja1BvZGNhc3Q9e3RoaXMub3BlblBvZGNhc3R9XG5cdFx0XHRcdC8+XG5cblx0XHRcdFx0PHN0eWxlIGpzeD57YFxuXHRcdFx0XHRcdC5iYW5uZXIge1xuXHRcdFx0XHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHRcdFx0XHRwYWRkaW5nLWJvdHRvbTogMjUlO1xuXHRcdFx0XHRcdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcblx0XHRcdFx0XHRcdGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cdFx0XHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjYWFhO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRoMSB7XG5cdFx0XHRcdFx0XHRmb250LXdlaWdodDogNjAwO1xuXHRcdFx0XHRcdFx0cGFkZGluZzogMTVweDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aDIge1xuXHRcdFx0XHRcdFx0cGFkZGluZzogMTVweDtcblx0XHRcdFx0XHRcdGZvbnQtc2l6ZTogMS4yZW07XG5cdFx0XHRcdFx0XHRmb250LXdlaWdodDogNjAwO1xuXHRcdFx0XHRcdFx0bWFyZ2luOiAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0YH08L3N0eWxlPlxuXHRcdFx0PC9MYXlvdXQ+XG5cdFx0KTtcblx0fVxufVxuIl19 */\\n/*@ sourceURL=/home/asus/Documentos/programaci\\xF3n/cursoNext/podcasts/pages/channel.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/home/asus/Documentos/programación/cursoNext/podcasts/pages/channel.js"],"names":["Layout","ChannelGrid","PodcastListWithClick","PodcastPlayer","Error","React","Component","constructor","props","event","podcast","metaKey","ctrlKey","shiftKey","nativeEvent","which","preventDefault","setState","openPodcast","state","getInitialProps","query","res","idChannel","id","reqChannel","reqSeries","reqAudios","Promise","all","fetch","status","statusCode","channel","audioClips","series","dataChannel","json","body","dataAudios","audio_clips","dataSeries","channels","e","render","title","closePodcast","backgroundImage","urls","banner_image","original","length"],"mappings":"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","sourcesContent":["import 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport PodcastListWithClick from '../components/PodcastListWithClick';\nimport PodcastPlayer from '../components/PodcastPlayer';\nimport Error from './_error';\n\nexport default class extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { openPodcast: null };\n\t}\n\n\tstatic async getInitialProps({ query, res }) {\n\t\tlet idChannel = query.id;\n\n\t\ttry {\n\t\t\tlet [\n\t\t\t\treqChannel,\n\t\t\t\treqSeries,\n\t\t\t\treqAudios,\n\t\t\t] = await Promise.all([\n\t\t\t\tfetch(\n\t\t\t\t\t`https://api.audioboom.com/channels/${idChannel}`\n\t\t\t\t),\n\t\t\t\tfetch(\n\t\t\t\t\t`https://api.audioboom.com/channels/${idChannel}/child_channels`\n\t\t\t\t),\n\t\t\t\tfetch(\n\t\t\t\t\t`https://api.audioboom.com/channels/${idChannel}/audio_clips`\n\t\t\t\t),\n\t\t\t]);\n\n\t\t\tif (reqChannel.status >= 400) {\n\t\t\t\tres.statusCode = reqChannel.status;\n\t\t\t\treturn {\n\t\t\t\t\tchannel: null,\n\t\t\t\t\taudioClips: null,\n\t\t\t\t\tseries: null,\n\t\t\t\t\tstatusCode: reqChannel.status,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tlet dataChannel = await reqChannel.json();\n\t\t\tlet channel = dataChannel.body.channel;\n\n\t\t\tlet dataAudios = await reqAudios.json();\n\t\t\tlet audioClips = dataAudios.body.audio_clips;\n\n\t\t\tlet dataSeries = await reqSeries.json();\n\t\t\tlet series = dataSeries.body.channels;\n\n\t\t\treturn { channel, audioClips, series, statusCode: 200 };\n\t\t} catch (e) {\n\t\t\treturn {\n\t\t\t\tchannel: null,\n\t\t\t\taudioClips: null,\n\t\t\t\tseries: null,\n\t\t\t\tstatusCode: 503,\n\t\t\t};\n\t\t}\n\t}\n\n\topenPodcast = (event, podcast) => {\n\t\tif (\n\t\t\tevent.metaKey ||\n\t\t\tevent.ctrlKey ||\n\t\t\tevent.shiftKey ||\n\t\t\t(event.nativeEvent && event.nativeEvent.which === 2)\n\t\t) {\n\t\t\t// Si está haciendo Ctrl+Click o Cmd+Click, dejamos que el click suceda normalmente\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\t\tthis.setState({\n\t\t\topenPodcast: podcast,\n\t\t});\n\t};\n\n\tclosePodcast = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({\n\t\t\topenPodcast: null,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tchannel,\n\t\t\taudioClips,\n\t\t\tseries,\n\t\t\tstatusCode,\n\t\t} = this.props;\n\t\tconst { openPodcast } = this.state;\n\n\t\tif (statusCode !== 200) {\n\t\t\treturn <Error statusCode={statusCode} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<Layout title={channel.title}>\n\t\t\t\t{openPodcast && (\n\t\t\t\t\t<PodcastPlayer\n\t\t\t\t\t\tclip={openPodcast}\n\t\t\t\t\t\tonClose={this.closePodcast}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t\t<div\n\t\t\t\t\tclassName='banner'\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundImage: `url(${channel.urls.banner_image.original})`,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<h1>{channel.title}</h1>\n\n\t\t\t\t{series.length > 0 && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Series</h2>\n\t\t\t\t\t\t<ChannelGrid channels={series} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t<h2>Ultimos Podcasts</h2>\n\t\t\t\t<PodcastListWithClick\n\t\t\t\t\tpodcasts={audioClips}\n\t\t\t\t\tonClickPodcast={this.openPodcast}\n\t\t\t\t/>\n\n\t\t\t\t<style jsx>{`\n\t\t\t\t\t.banner {\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\tpadding-bottom: 25%;\n\t\t\t\t\t\tbackground-position: 50% 50%;\n\t\t\t\t\t\tbackground-size: cover;\n\t\t\t\t\t\tbackground-color: #aaa;\n\t\t\t\t\t}\n\t\t\t\t\th1 {\n\t\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\t\tpadding: 15px;\n\t\t\t\t\t}\n\t\t\t\t\th2 {\n\t\t\t\t\t\tpadding: 15px;\n\t\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t}\n\t\t\t\t`}</style>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}